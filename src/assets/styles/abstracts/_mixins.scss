@use "variables" as vars;
@use "sass:map";

@mixin container() {
  width: 100%;
  padding-right: var(--container-padding, 1rem);
  padding-left: var(--container-padding, 1rem);
  margin-right: auto;
  margin-left: auto;

  @each $breakpoint, $container-width in vars.$container-max-widths {
    // Usar la funci√≥n map-get para obtener los valores del breakpoint del mapa de breakpoints
    @media (min-width: map.get(vars.$grid-breakpoints, $breakpoint)) {
      max-width: $container-width;
    }
  }
}

@mixin card {
  padding: vars.$card-padding-y vars.$card-padding-x;
  border: vars.$card-border-width solid vars.$card-border-color;
  border-radius: vars.$card-radius;

  box-shadow: vars.$card-shadow-offset vars.$card-shadow-offset
    vars.$card-shadow-blur vars.$card-shadow-color;
  transition: transform 0.2s ease, box-shadow 0.2s ease;

  &:hover {
    transition: all 0.3s ease-in-out;
    transform: scale(vars.$card-hover-scale);
    box-shadow: calc(vars.$card-shadow-offset * 1.5)
      calc(vars.$card-shadow-offset * 1.5) vars.$card-shadow-blur
      vars.$card-shadow-color;
  }
}

@mixin button {
  padding: vars.$card-padding-y vars.$card-padding-x;
  border: vars.$card-border-width solid vars.$card-border-color;
  border-radius: 0;
  background-color: transparent;
  box-shadow: vars.$card-shadow-offset vars.$card-shadow-offset
    vars.$card-shadow-blur vars.$card-shadow-color;
  transition: transform 0.2s ease, box-shadow 0.2s ease;

  &:hover {
    transform: scale(vars.$card-hover-scale);
    box-shadow: calc(vars.$card-shadow-offset * 1.5)
      calc(vars.$card-shadow-offset * 1.5) vars.$card-shadow-blur
      vars.$card-shadow-color;
  }
}
